#!/bin/bash
# Copyright (c) 2018-2022, Parker Owan.  All rights reserved.
# Licensed under BSD-3 Clause, https://opensource.org/licenses/BSD-3-Clause

# define directories
hub_prefix=owan
image=libsia
target_dir=libsia
run_image=$image
dir="$( cd "$(dirname "$0")" ; pwd -P )"

# functions
remote()
{
  run_image=$hub_prefix/$image:latest
}

build()
{
  docker build -t $image $dir/..
}

bash()
{
  # https://cntnr.io/running-guis-with-docker-on-mac-os-x-a14df6a76efc
  docker run --rm -it \
    -v $dir/..:/$target_dir \
    $run_image /bin/bash
}

push()
{
  docker tag $image:latest $hub_prefix/$image:latest
  docker push $hub_prefix/$image:latest
}

pull()
{
  docker pull $hub_prefix/$image:latest
}

jupyter()
{
  docker run --rm -it \
    -p 8888:8888 \
    -v $dir/..:/$target_dir \
    $run_image \
    jupyter lab \
    --ip=0.0.0.0 \
    --port=8888 \
    --allow-root
}

help()
{
  cat << EOF

usage: run <command>

example: run --build

Commands:
  --help         Displays this help
  --build        Builds the Docker container
  --bash         Runs a CLI bash connected to the kernel server
  --push         Pushes the latest image to the docker hub
  --push         Pulls the latest image from the docker hub
  --jupyter      Runs a jupyter notebook server
  --remote       Optional (before --bash or --jupyter) to use remote

EOF
}

# parse command line
while [ "$1" != "" ]; do
  case $1 in
    --help )        help
                    exit
                    ;;
    --build )       shift
                    build
                    ;;
    --bash )        shift
                    bash
                    ;;
    --push )        shift
                    push
                    ;;
    --pull )        shift
                    push
                    ;;
    --jupyter )     shift
                    jupyter
                    ;;
    --remote )      shift
                    remote
                    ;;
    * )             help
                    exit 1
  esac
done

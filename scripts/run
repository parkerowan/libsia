#!/bin/bash
# Copyright (c) 2018-2021, Parker Owan.  All rights reserved.
# Licensed under BSD-3 Clause, https://opensource.org/licenses/BSD-3-Clause

# define directories
hub_prefix=owan
image=libsia
target_dir=libsia
dir="$( cd "$(dirname "$0")" ; pwd -P )"
IP="$(ipconfig getifaddr en0)"
display_env=$IP:0

# functions
build()
{
  docker build -t $image $dir/..
}

bash()
{
  # https://cntnr.io/running-guis-with-docker-on-mac-os-x-a14df6a76efc
  xhost + $IP
  docker run --rm -it \
    -v $dir/..:/$target_dir \
    -v /dev:/dev \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY=$display_env \
    --privileged \
    $image /bin/bash
  xhost -
}

push()
{
  docker tag $image:latest $hub_prefix/$image:latest
  docker push $hub_prefix/$image:latest
}

jupyter()
{
  docker run --rm -it \
    -p 8888:8888 \
    -v $dir/..:/$target_dir \
    $image \
    jupyter lab \
    --ip=0.0.0.0 \
    --port=8888 \
    --allow-root
}

help()
{
  cat << EOF

usage: run <command>

example: run --build

Commands:
  --help         Displays this help
  --build        Builds the Docker container
  --bash         Runs a CLI bash connected to the kernel server
  --push         Pushes the latest image to the docker hub
  --jupyter      Runs a jupyter notebook server

EOF
}

# parse command line
while [ "$1" != "" ]; do
  case $1 in
    --help )        help
                    exit
                    ;;
    --build )       shift
                    build
                    ;;
    --bash )        shift
                    bash
                    ;;
    --push )        shift
                    push
                    ;;
    --jupyter )     shift
                    jupyter
                    ;;
    * )             help
                    exit 1
  esac
  shift
done
